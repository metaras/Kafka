[2565-02-25 22:00:48,853] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@1e7c7811, name=log4j:logger=kafka.controller (kafka.controller)
[2565-02-25 22:05:12,103] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@1e7c7811, name=log4j:logger=kafka.controller (kafka.controller)
[2565-02-25 22:06:13,189] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@1e7c7811, name=log4j:logger=kafka.controller (kafka.controller)
[2565-02-25 22:08:04,050] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@1e7c7811, name=log4j:logger=kafka.controller (kafka.controller)
[2565-02-25 22:12:03,942] INFO [ControllerEventThread controllerId=0] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2565-02-25 22:12:03,980] INFO [Controller id=0] 0 successfully elected as the controller. Epoch incremented to 1 and epoch zk version is now 1 (kafka.controller.KafkaController)
[2565-02-25 22:12:03,981] INFO [Controller id=0] Registering handlers (kafka.controller.KafkaController)
[2565-02-25 22:12:03,987] INFO [Controller id=0] Deleting log dir event notifications (kafka.controller.KafkaController)
[2565-02-25 22:12:03,998] INFO [Controller id=0] Deleting isr change notifications (kafka.controller.KafkaController)
[2565-02-25 22:12:04,003] INFO [Controller id=0] Initializing controller context (kafka.controller.KafkaController)
[2565-02-25 22:12:04,040] INFO [Controller id=0] Initialized broker epochs cache: Map(0 -> 159) (kafka.controller.KafkaController)
[2565-02-25 22:12:04,048] DEBUG [Controller id=0] Register BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2565-02-25 22:12:04,055] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2565-02-25 22:12:04,079] INFO [Controller id=0] Currently active brokers in the cluster: Set(0) (kafka.controller.KafkaController)
[2565-02-25 22:12:04,080] INFO [Controller id=0] Currently shutting brokers in the cluster: Set() (kafka.controller.KafkaController)
[2565-02-25 22:12:04,081] INFO [Controller id=0] Current list of topics in the cluster: Set() (kafka.controller.KafkaController)
[2565-02-25 22:12:04,081] INFO [Controller id=0] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2565-02-25 22:12:04,086] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2565-02-25 22:12:04,087] INFO [Controller id=0] List of topics to be deleted:  (kafka.controller.KafkaController)
[2565-02-25 22:12:04,087] INFO [Controller id=0] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2565-02-25 22:12:04,088] INFO [Controller id=0] Initializing topic deletion manager (kafka.controller.KafkaController)
[2565-02-25 22:12:04,089] INFO [Topic Deletion Manager 0] Initializing manager with initial deletions: Set(), initial ineligible deletions: Set() (kafka.controller.TopicDeletionManager)
[2565-02-25 22:12:04,089] INFO [Controller id=0] Sending update metadata request (kafka.controller.KafkaController)
[2565-02-25 22:12:04,106] INFO [ReplicaStateMachine controllerId=0] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2565-02-25 22:12:04,109] INFO [ReplicaStateMachine controllerId=0] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2565-02-25 22:12:04,123] INFO [ReplicaStateMachine controllerId=0] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2565-02-25 22:12:04,124] DEBUG [ReplicaStateMachine controllerId=0] Started replica state machine with initial state -> Map() (kafka.controller.ZkReplicaStateMachine)
[2565-02-25 22:12:04,125] INFO [PartitionStateMachine controllerId=0] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2565-02-25 22:12:04,125] INFO [RequestSendThread controllerId=0] Controller 0 connected to DESKTOP-UNE11UU:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2565-02-25 22:12:04,125] INFO [PartitionStateMachine controllerId=0] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2565-02-25 22:12:04,133] DEBUG [PartitionStateMachine controllerId=0] Started partition state machine with initial state -> Map() (kafka.controller.ZkPartitionStateMachine)
[2565-02-25 22:12:04,134] INFO [Controller id=0] Ready to serve as the new controller with epoch 1 (kafka.controller.KafkaController)
[2565-02-25 22:12:04,142] INFO [Controller id=0] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2565-02-25 22:12:04,143] INFO [Controller id=0] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2565-02-25 22:12:04,143] INFO [Controller id=0] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2565-02-25 22:12:04,145] INFO [Controller id=0] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2565-02-25 22:12:04,149] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2565-02-25 22:12:04,168] INFO [Controller id=0] Starting the controller scheduler (kafka.controller.KafkaController)
[2565-02-25 22:12:09,172] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2565-02-25 22:12:09,172] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2565-02-25 22:12:09,175] DEBUG [Controller id=0] Preferred replicas by broker Map() (kafka.controller.KafkaController)
[2565-02-25 22:17:09,183] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2565-02-25 22:17:09,184] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2565-02-25 22:17:09,184] DEBUG [Controller id=0] Preferred replicas by broker Map() (kafka.controller.KafkaController)
[2565-02-25 22:22:09,192] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2565-02-25 22:22:09,192] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2565-02-25 22:22:09,193] DEBUG [Controller id=0] Preferred replicas by broker Map() (kafka.controller.KafkaController)
[2565-02-25 22:27:09,195] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2565-02-25 22:27:09,195] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2565-02-25 22:27:09,196] DEBUG [Controller id=0] Preferred replicas by broker Map() (kafka.controller.KafkaController)
[2565-02-25 22:32:09,199] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2565-02-25 22:32:09,199] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2565-02-25 22:32:09,199] DEBUG [Controller id=0] Preferred replicas by broker Map() (kafka.controller.KafkaController)
[2565-02-25 22:33:15,195] INFO [Controller id=0] Shutting down broker 0 (kafka.controller.KafkaController)
[2565-02-25 22:33:15,196] DEBUG [Controller id=0] All shutting down brokers: 0 (kafka.controller.KafkaController)
[2565-02-25 22:33:15,197] DEBUG [Controller id=0] Live brokers:  (kafka.controller.KafkaController)
[2565-02-25 22:33:15,201] TRACE [Controller id=0] All leaders =  (kafka.controller.KafkaController)
[2565-02-25 22:33:16,744] INFO [ControllerEventThread controllerId=0] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2565-02-25 22:33:16,745] INFO [ControllerEventThread controllerId=0] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2565-02-25 22:33:16,745] INFO [ControllerEventThread controllerId=0] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2565-02-25 22:33:16,746] DEBUG [Controller id=0] Resigning (kafka.controller.KafkaController)
[2565-02-25 22:33:16,747] DEBUG [Controller id=0] Unregister BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2565-02-25 22:33:16,749] INFO [PartitionStateMachine controllerId=0] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2565-02-25 22:33:16,750] INFO [ReplicaStateMachine controllerId=0] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2565-02-25 22:33:16,751] INFO [RequestSendThread controllerId=0] Shutting down (kafka.controller.RequestSendThread)
[2565-02-25 22:33:16,751] INFO [RequestSendThread controllerId=0] Stopped (kafka.controller.RequestSendThread)
[2565-02-25 22:33:16,751] INFO [RequestSendThread controllerId=0] Shutdown completed (kafka.controller.RequestSendThread)
[2565-02-25 22:33:16,755] INFO [Controller id=0] Resigned (kafka.controller.KafkaController)
[2565-02-25 22:33:31,407] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@1e7c7811, name=log4j:logger=kafka.controller (kafka.controller)
[2565-02-25 22:35:46,475] INFO [ControllerEventThread controllerId=0] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2565-02-25 22:35:46,504] INFO [Controller id=0] 0 successfully elected as the controller. Epoch incremented to 1 and epoch zk version is now 1 (kafka.controller.KafkaController)
[2565-02-25 22:35:46,504] INFO [Controller id=0] Registering handlers (kafka.controller.KafkaController)
[2565-02-25 22:35:46,508] INFO [Controller id=0] Deleting log dir event notifications (kafka.controller.KafkaController)
[2565-02-25 22:35:46,516] INFO [Controller id=0] Deleting isr change notifications (kafka.controller.KafkaController)
[2565-02-25 22:35:46,519] INFO [Controller id=0] Initializing controller context (kafka.controller.KafkaController)
[2565-02-25 22:35:46,544] INFO [Controller id=0] Initialized broker epochs cache: Map(0 -> 144) (kafka.controller.KafkaController)
[2565-02-25 22:35:46,550] DEBUG [Controller id=0] Register BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2565-02-25 22:35:46,556] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2565-02-25 22:35:46,574] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2565-02-25 22:35:46,574] INFO [Controller id=0] Currently active brokers in the cluster: Set(0) (kafka.controller.KafkaController)
[2565-02-25 22:35:46,575] INFO [Controller id=0] Currently shutting brokers in the cluster: Set() (kafka.controller.KafkaController)
[2565-02-25 22:35:46,575] INFO [Controller id=0] Current list of topics in the cluster: Set() (kafka.controller.KafkaController)
[2565-02-25 22:35:46,575] INFO [Controller id=0] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2565-02-25 22:35:46,579] INFO [Controller id=0] List of topics to be deleted:  (kafka.controller.KafkaController)
[2565-02-25 22:35:46,579] INFO [Controller id=0] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2565-02-25 22:35:46,579] INFO [Controller id=0] Initializing topic deletion manager (kafka.controller.KafkaController)
[2565-02-25 22:35:46,581] INFO [Topic Deletion Manager 0] Initializing manager with initial deletions: Set(), initial ineligible deletions: Set() (kafka.controller.TopicDeletionManager)
[2565-02-25 22:35:46,581] INFO [Controller id=0] Sending update metadata request (kafka.controller.KafkaController)
[2565-02-25 22:35:46,594] INFO [ReplicaStateMachine controllerId=0] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2565-02-25 22:35:46,595] INFO [ReplicaStateMachine controllerId=0] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2565-02-25 22:35:46,607] INFO [ReplicaStateMachine controllerId=0] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2565-02-25 22:35:46,608] DEBUG [ReplicaStateMachine controllerId=0] Started replica state machine with initial state -> Map() (kafka.controller.ZkReplicaStateMachine)
[2565-02-25 22:35:46,609] INFO [PartitionStateMachine controllerId=0] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2565-02-25 22:35:46,610] INFO [PartitionStateMachine controllerId=0] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2565-02-25 22:35:46,610] INFO [RequestSendThread controllerId=0] Controller 0 connected to DESKTOP-UNE11UU:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2565-02-25 22:35:46,616] DEBUG [PartitionStateMachine controllerId=0] Started partition state machine with initial state -> Map() (kafka.controller.ZkPartitionStateMachine)
[2565-02-25 22:35:46,617] INFO [Controller id=0] Ready to serve as the new controller with epoch 1 (kafka.controller.KafkaController)
[2565-02-25 22:35:46,623] INFO [Controller id=0] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2565-02-25 22:35:46,624] INFO [Controller id=0] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2565-02-25 22:35:46,624] INFO [Controller id=0] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2565-02-25 22:35:46,624] INFO [Controller id=0] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2565-02-25 22:35:46,625] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2565-02-25 22:35:46,638] INFO [Controller id=0] Starting the controller scheduler (kafka.controller.KafkaController)
[2565-02-25 22:35:51,643] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2565-02-25 22:35:51,644] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2565-02-25 22:35:51,645] DEBUG [Controller id=0] Preferred replicas by broker Map() (kafka.controller.KafkaController)
[2565-02-25 22:40:51,655] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2565-02-25 22:40:51,655] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2565-02-25 22:40:51,656] DEBUG [Controller id=0] Preferred replicas by broker Map() (kafka.controller.KafkaController)
[2565-02-25 22:45:51,669] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2565-02-25 22:45:51,669] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2565-02-25 22:45:51,669] DEBUG [Controller id=0] Preferred replicas by broker Map() (kafka.controller.KafkaController)
[2565-02-25 22:50:51,680] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2565-02-25 22:50:51,681] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2565-02-25 22:50:51,681] DEBUG [Controller id=0] Preferred replicas by broker Map() (kafka.controller.KafkaController)
[2565-02-25 22:55:51,685] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2565-02-25 22:55:51,685] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2565-02-25 22:55:51,686] DEBUG [Controller id=0] Preferred replicas by broker Map() (kafka.controller.KafkaController)
[2565-02-25 23:00:51,690] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2565-02-25 23:00:51,694] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2565-02-25 23:00:51,695] DEBUG [Controller id=0] Preferred replicas by broker Map() (kafka.controller.KafkaController)
[2565-02-25 23:05:51,706] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2565-02-25 23:05:51,706] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2565-02-25 23:05:51,707] DEBUG [Controller id=0] Preferred replicas by broker Map() (kafka.controller.KafkaController)
[2565-02-25 23:09:59,155] INFO [Controller id=0] New topics: [Set(cities)], deleted topics: [Set()], new partition replica assignment [Map(cities-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))] (kafka.controller.KafkaController)
[2565-02-25 23:09:59,155] INFO [Controller id=0] New partition creation callback for cities-0 (kafka.controller.KafkaController)
[2565-02-25 23:09:59,195] INFO [RequestSendThread controllerId=0] Controller 0 connected to DESKTOP-UNE11UU:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2565-02-25 23:10:22,233] INFO [Controller id=0] New topics: [Set(__consumer_offsets)], deleted topics: [Set()], new partition replica assignment [Map(__consumer_offsets-22 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-30 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-8 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-21 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-4 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-27 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-7 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-9 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-46 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-25 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-35 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-41 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-33 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-23 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-49 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-47 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-16 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-28 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-31 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-36 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-42 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-3 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-18 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-37 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-15 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-24 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-38 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-17 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-48 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-19 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-11 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-13 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-2 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-43 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-6 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-14 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-20 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-44 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-39 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-12 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-45 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-1 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-5 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-26 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-29 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-34 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-10 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-32 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-40 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))] (kafka.controller.KafkaController)
[2565-02-25 23:10:22,233] INFO [Controller id=0] New partition creation callback for __consumer_offsets-22,__consumer_offsets-30,__consumer_offsets-8,__consumer_offsets-21,__consumer_offsets-4,__consumer_offsets-27,__consumer_offsets-7,__consumer_offsets-9,__consumer_offsets-46,__consumer_offsets-25,__consumer_offsets-35,__consumer_offsets-41,__consumer_offsets-33,__consumer_offsets-23,__consumer_offsets-49,__consumer_offsets-47,__consumer_offsets-16,__consumer_offsets-28,__consumer_offsets-31,__consumer_offsets-36,__consumer_offsets-42,__consumer_offsets-3,__consumer_offsets-18,__consumer_offsets-37,__consumer_offsets-15,__consumer_offsets-24,__consumer_offsets-38,__consumer_offsets-17,__consumer_offsets-48,__consumer_offsets-19,__consumer_offsets-11,__consumer_offsets-13,__consumer_offsets-2,__consumer_offsets-43,__consumer_offsets-6,__consumer_offsets-14,__consumer_offsets-20,__consumer_offsets-0,__consumer_offsets-44,__consumer_offsets-39,__consumer_offsets-12,__consumer_offsets-45,__consumer_offsets-1,__consumer_offsets-5,__consumer_offsets-26,__consumer_offsets-29,__consumer_offsets-34,__consumer_offsets-10,__consumer_offsets-32,__consumer_offsets-40 (kafka.controller.KafkaController)
[2565-02-25 23:10:51,710] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2565-02-25 23:10:51,710] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2565-02-25 23:10:51,714] DEBUG [Controller id=0] Preferred replicas by broker Map(0 -> Map(__consumer_offsets-22 -> Vector(0), __consumer_offsets-30 -> Vector(0), __consumer_offsets-8 -> Vector(0), __consumer_offsets-21 -> Vector(0), __consumer_offsets-4 -> Vector(0), __consumer_offsets-27 -> Vector(0), __consumer_offsets-7 -> Vector(0), __consumer_offsets-9 -> Vector(0), __consumer_offsets-46 -> Vector(0), __consumer_offsets-25 -> Vector(0), __consumer_offsets-35 -> Vector(0), __consumer_offsets-41 -> Vector(0), __consumer_offsets-33 -> Vector(0), __consumer_offsets-23 -> Vector(0), __consumer_offsets-49 -> Vector(0), __consumer_offsets-47 -> Vector(0), __consumer_offsets-16 -> Vector(0), __consumer_offsets-28 -> Vector(0), __consumer_offsets-31 -> Vector(0), __consumer_offsets-36 -> Vector(0), __consumer_offsets-42 -> Vector(0), __consumer_offsets-3 -> Vector(0), __consumer_offsets-18 -> Vector(0), __consumer_offsets-37 -> Vector(0), __consumer_offsets-15 -> Vector(0), __consumer_offsets-24 -> Vector(0), __consumer_offsets-38 -> Vector(0), __consumer_offsets-17 -> Vector(0), __consumer_offsets-48 -> Vector(0), cities-0 -> Vector(0), __consumer_offsets-19 -> Vector(0), __consumer_offsets-11 -> Vector(0), __consumer_offsets-13 -> Vector(0), __consumer_offsets-2 -> Vector(0), __consumer_offsets-43 -> Vector(0), __consumer_offsets-6 -> Vector(0), __consumer_offsets-14 -> Vector(0), __consumer_offsets-20 -> Vector(0), __consumer_offsets-0 -> Vector(0), __consumer_offsets-44 -> Vector(0), __consumer_offsets-39 -> Vector(0), __consumer_offsets-12 -> Vector(0), __consumer_offsets-45 -> Vector(0), __consumer_offsets-1 -> Vector(0), __consumer_offsets-5 -> Vector(0), __consumer_offsets-26 -> Vector(0), __consumer_offsets-29 -> Vector(0), __consumer_offsets-34 -> Vector(0), __consumer_offsets-10 -> Vector(0), __consumer_offsets-32 -> Vector(0), __consumer_offsets-40 -> Vector(0))) (kafka.controller.KafkaController)
[2565-02-25 23:10:51,716] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2565-02-25 23:10:51,717] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2565-02-25 23:15:51,730] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2565-02-25 23:15:51,730] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2565-02-25 23:15:51,732] DEBUG [Controller id=0] Preferred replicas by broker Map(0 -> Map(__consumer_offsets-22 -> Vector(0), __consumer_offsets-30 -> Vector(0), __consumer_offsets-8 -> Vector(0), __consumer_offsets-21 -> Vector(0), __consumer_offsets-4 -> Vector(0), __consumer_offsets-27 -> Vector(0), __consumer_offsets-7 -> Vector(0), __consumer_offsets-9 -> Vector(0), __consumer_offsets-46 -> Vector(0), __consumer_offsets-25 -> Vector(0), __consumer_offsets-35 -> Vector(0), __consumer_offsets-41 -> Vector(0), __consumer_offsets-33 -> Vector(0), __consumer_offsets-23 -> Vector(0), __consumer_offsets-49 -> Vector(0), __consumer_offsets-47 -> Vector(0), __consumer_offsets-16 -> Vector(0), __consumer_offsets-28 -> Vector(0), __consumer_offsets-31 -> Vector(0), __consumer_offsets-36 -> Vector(0), __consumer_offsets-42 -> Vector(0), __consumer_offsets-3 -> Vector(0), __consumer_offsets-18 -> Vector(0), __consumer_offsets-37 -> Vector(0), __consumer_offsets-15 -> Vector(0), __consumer_offsets-24 -> Vector(0), __consumer_offsets-38 -> Vector(0), __consumer_offsets-17 -> Vector(0), __consumer_offsets-48 -> Vector(0), cities-0 -> Vector(0), __consumer_offsets-19 -> Vector(0), __consumer_offsets-11 -> Vector(0), __consumer_offsets-13 -> Vector(0), __consumer_offsets-2 -> Vector(0), __consumer_offsets-43 -> Vector(0), __consumer_offsets-6 -> Vector(0), __consumer_offsets-14 -> Vector(0), __consumer_offsets-20 -> Vector(0), __consumer_offsets-0 -> Vector(0), __consumer_offsets-44 -> Vector(0), __consumer_offsets-39 -> Vector(0), __consumer_offsets-12 -> Vector(0), __consumer_offsets-45 -> Vector(0), __consumer_offsets-1 -> Vector(0), __consumer_offsets-5 -> Vector(0), __consumer_offsets-26 -> Vector(0), __consumer_offsets-29 -> Vector(0), __consumer_offsets-34 -> Vector(0), __consumer_offsets-10 -> Vector(0), __consumer_offsets-32 -> Vector(0), __consumer_offsets-40 -> Vector(0))) (kafka.controller.KafkaController)
[2565-02-25 23:15:51,733] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2565-02-25 23:15:51,733] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2565-02-25 23:20:51,741] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2565-02-25 23:20:51,741] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2565-02-25 23:20:51,742] DEBUG [Controller id=0] Preferred replicas by broker Map(0 -> Map(__consumer_offsets-22 -> Vector(0), __consumer_offsets-30 -> Vector(0), __consumer_offsets-8 -> Vector(0), __consumer_offsets-21 -> Vector(0), __consumer_offsets-4 -> Vector(0), __consumer_offsets-27 -> Vector(0), __consumer_offsets-7 -> Vector(0), __consumer_offsets-9 -> Vector(0), __consumer_offsets-46 -> Vector(0), __consumer_offsets-25 -> Vector(0), __consumer_offsets-35 -> Vector(0), __consumer_offsets-41 -> Vector(0), __consumer_offsets-33 -> Vector(0), __consumer_offsets-23 -> Vector(0), __consumer_offsets-49 -> Vector(0), __consumer_offsets-47 -> Vector(0), __consumer_offsets-16 -> Vector(0), __consumer_offsets-28 -> Vector(0), __consumer_offsets-31 -> Vector(0), __consumer_offsets-36 -> Vector(0), __consumer_offsets-42 -> Vector(0), __consumer_offsets-3 -> Vector(0), __consumer_offsets-18 -> Vector(0), __consumer_offsets-37 -> Vector(0), __consumer_offsets-15 -> Vector(0), __consumer_offsets-24 -> Vector(0), __consumer_offsets-38 -> Vector(0), __consumer_offsets-17 -> Vector(0), __consumer_offsets-48 -> Vector(0), cities-0 -> Vector(0), __consumer_offsets-19 -> Vector(0), __consumer_offsets-11 -> Vector(0), __consumer_offsets-13 -> Vector(0), __consumer_offsets-2 -> Vector(0), __consumer_offsets-43 -> Vector(0), __consumer_offsets-6 -> Vector(0), __consumer_offsets-14 -> Vector(0), __consumer_offsets-20 -> Vector(0), __consumer_offsets-0 -> Vector(0), __consumer_offsets-44 -> Vector(0), __consumer_offsets-39 -> Vector(0), __consumer_offsets-12 -> Vector(0), __consumer_offsets-45 -> Vector(0), __consumer_offsets-1 -> Vector(0), __consumer_offsets-5 -> Vector(0), __consumer_offsets-26 -> Vector(0), __consumer_offsets-29 -> Vector(0), __consumer_offsets-34 -> Vector(0), __consumer_offsets-10 -> Vector(0), __consumer_offsets-32 -> Vector(0), __consumer_offsets-40 -> Vector(0))) (kafka.controller.KafkaController)
[2565-02-25 23:20:51,743] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2565-02-25 23:20:51,743] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2565-02-25 23:25:43,407] INFO [Controller id=0] Shutting down broker 0 (kafka.controller.KafkaController)
[2565-02-25 23:25:43,408] DEBUG [Controller id=0] All shutting down brokers: 0 (kafka.controller.KafkaController)
[2565-02-25 23:25:43,408] DEBUG [Controller id=0] Live brokers:  (kafka.controller.KafkaController)
[2565-02-25 23:25:43,411] TRACE [Controller id=0] All leaders = __consumer_offsets-49 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-38 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-16 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-27 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-8 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-19 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-13 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-2 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-46 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-35 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-24 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-5 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-43 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-32 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-21 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-10 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-37 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-48 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-40 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-18 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-29 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-7 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-23 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-45 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-34 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),cities-0 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-26 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-4 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-15 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-42 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-31 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-9 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-20 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-12 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-1 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-28 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-17 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-6 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-39 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-44 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-36 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-47 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-3 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-25 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-14 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-30 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-41 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-33 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-22 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-11 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-0 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1) (kafka.controller.KafkaController)
[2565-02-25 23:25:44,948] INFO [ControllerEventThread controllerId=0] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2565-02-25 23:25:44,949] INFO [ControllerEventThread controllerId=0] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2565-02-25 23:25:44,949] INFO [ControllerEventThread controllerId=0] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2565-02-25 23:25:44,950] DEBUG [Controller id=0] Resigning (kafka.controller.KafkaController)
[2565-02-25 23:25:44,950] DEBUG [Controller id=0] Unregister BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2565-02-25 23:25:44,952] INFO [PartitionStateMachine controllerId=0] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2565-02-25 23:25:44,952] INFO [ReplicaStateMachine controllerId=0] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2565-02-25 23:25:44,953] INFO [RequestSendThread controllerId=0] Shutting down (kafka.controller.RequestSendThread)
[2565-02-25 23:25:44,953] INFO [RequestSendThread controllerId=0] Stopped (kafka.controller.RequestSendThread)
[2565-02-25 23:25:44,954] INFO [RequestSendThread controllerId=0] Shutdown completed (kafka.controller.RequestSendThread)
[2565-02-25 23:25:44,956] INFO [Controller id=0] Resigned (kafka.controller.KafkaController)
